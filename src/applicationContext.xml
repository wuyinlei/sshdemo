<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">


	<!--先配置C3P0连接池-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<!--JAVA连接MySQL，在URL指定字符集-->
		<property name="jdbcUrl" value="jdbc:mysql:///exam?useUnicode=true&amp;characterEncoding=UTF-8"/>
		<property name="user" value="root"/>
		<property name="password" value="root"/>

	</bean>

	<!--编写bean  名称是固定的   加载hibernate.cig.xml的配置文件-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!--<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>-->
		<!--先加载连接池-->
		<property name="dataSource" ref="dataSource"/>
		<!--加载方言 加载可选项-->
		<property name="hibernateProperties">
			<!--<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>-->

			<!--&lt;!&ndash; 可选配置 &ndash;&gt;-->
			<!--<property name="hibernate.show_sql">true</property>-->
			<!--<property name="hibernate.format_sql">true</property>-->
			<!--<property name="hibernate.hbm2ddl.auto">update</property>-->

			<!--&lt;!&ndash; 配置C3P0的连接池 &ndash;&gt;-->
			<!--<property name="connection.provider_class">org.hibernate.c3p0.internal.C3P0ConnectionProvider</property>-->

			<!--&lt;!&ndash; 映射配置文件 &ndash;&gt;-->
			<!--<mapping resource="com/ruolan/domain/Customer.hbm.xml"></mapping>-->
			<!---->
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
			</props>
		</property>

		<property name="mappingResources">
			<list >
				<value >com/ruolan/domain/Customer.hbm.xml</value>
			</list>


		</property>
	</bean>

	<!--先配置平台事务管理器-->
	<bean id="transactionManager"  class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>

	</bean>

	<!--开启事务的注解-->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!--强调：  如果是在这里配置action  必须是多例的  也就是scope="prototype"-->
	<bean id="customerAction" class="com.ruolan.web.action.CustomerAction" scope="prototype">
		<property name="customerService" ref="customerService"/>
	</bean>

	<!--配置客户模块-->
	<bean id="customerService" class="com.ruolan.service.CustomerServiceImpl">
		<property name="customerDao" ref="customerDao"/>
	</bean>

	<!--dao 都需要集成HibernateDaoSupport  注入sessionFactory-->
	<bean id="customerDao" class="com.ruolan.dao.CustomerDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>


	<!---->
	<!--<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">-->
		<!--<property name="sessionFactory" value=""></property>-->
		<!---->
	<!--</bean>-->

</beans>












